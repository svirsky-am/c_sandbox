#![allow(dead_code)]
#![allow(unused_variables)]

use std::fmt;

#[derive(Debug)]
struct Student {
    name: String,
    age: u8,
}

impl fmt::Display for Student {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        write!(f, "{} ({})", self.name, self.age)
    }
}

// –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ –¥–ª—è #[derive(Debug)]

// impl fmt::Debug for Student {
//     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
//         // –û–¥–∏–Ω –∏–∑ –ø—Ä–æ—Å—Ç—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏
//         f.debug_struct("Student")
//             .field("name", &self.name)
//             .field("age", &format_args!("{} –ª–µ—Ç", self.age))
//             .finish()
//     }
// }

pub fn fake_main() {
    let s1 = "–Ø–Ω–¥–µ–∫—Å";
    let s2 = "–ü—Ä–∞–∫—Ç–∏–∫—É–º";

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—Ç `String`
    let s: String = format!("{} {}", s1, s2);

    // –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
    println!("{}", s);

    let student = Student {
        name: String::from("–ê–ª–∏—Å–∞"),
        age: 25,
    };

    // –í—ã–≤–æ–¥: –ê–ª–∏—Å–∞ (25)
    println!("–°—Ç—É–¥–µ–Ω—Ç: {}", student);

    // let pi2 = 3.1415;
    let pi2 = std::f64::consts::PI;

    let motivator = 'ü¶Ä';

    // –ü—Ä–∏–º–µ—Ä —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∏—Å–µ–ª —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π
    // –í—ã–≤–æ–¥: `pi2 = 3.14`
    println!("pi2 = {:.2}", pi2);

    // ---

    // –ü—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å —É–∫–∞–∑–∞–Ω–∏–µ–º —à–∏—Ä–∏–Ω—ã –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è

    // –®–∏—Ä–∏–Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è: 5 —Å–∏–º–≤–æ–ª–æ–≤ (–ø—Ä–æ–±–µ–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
    // –í—ã–≤–æ–¥: `ü¶Ä    `
    println!("`{:5}`", motivator);

    // –≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω–æ –≤–∞—Ä–∏–∞–Ω—Ç—É –≤—ã—à–µ
    // –®–∏—Ä–∏–Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è: 5 —Å–∏–º–≤–æ–ª–æ–≤
    // –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ: —Å–ª–µ–≤–∞ (`<`)
    // –í—ã–≤–æ–¥: `ü¶Ä    `
    println!("`{:<5}`", motivator);

    // `<` - –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Å–ø—Ä–∞–≤–∞
    // –í—ã–≤–æ–¥: `    ü¶Ä`
    println!("`{motivator:>5}`");

    // `^` - –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ —Ü–µ–Ω—Ç—Ä—É
    // –í—ã–≤–æ–¥: `  ü¶Ä  `
    println!("`{0:^5}`", motivator);

    // –ö–∞—Å—Ç–æ–º–Ω—ã–π —Å–∏–º–≤–æ–ª –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è (`-`)
    // –í—ã–≤–æ–¥: `--ü¶Ä--`
    println!("`{:-^5}`", motivator);

    // ---

    // –ü—Ä–∏–º–µ—Ä —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –ª–∏–¥–∏—Ä—É—é—â–∏—Ö –Ω—É–ª–µ–π
    // –í—ã–≤–æ–¥: `000031`
    println!("{:06}", 31);

    // –í—ã–≤–æ–¥: Student { name: "–ê–ª–∏—Å–∞", age: 25 }
    println!("{:?}", student);
    // –í—ã–≤–æ–¥:
    // Student {
    //     name: "–ê–ª–∏—Å–∞",
    //     age: 25,
    // }
    println!("{:#?}", student);

    let x = 10;
    let y = dbg!(x * 2) + 5;
}
